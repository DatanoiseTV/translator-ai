name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Setup Ollama
      run: |
        curl -fsSL https://ollama.com/install.sh | sh
        # Start Ollama service in background
        ollama serve &
        # Wait for Ollama to be ready
        echo "Waiting for Ollama to start..."
        for i in {1..30}; do
          if curl -s http://localhost:11434/api/tags >/dev/null 2>&1; then
            echo "Ollama is ready!"
            break
          fi
          echo "Waiting for Ollama... ($i/30)"
          sleep 1
        done
        # Pull the model we use for testing
        echo "Pulling deepseek-r1:latest model..."
        ollama pull deepseek-r1:latest
        # Verify the model is available
        ollama list
    
    - name: Run all tests
      run: npm test
      env:
        # Optionally set GEMINI_API_KEY if you add it as a repository secret
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    
    - name: Test coverage
      run: npm run test:coverage
      if: matrix.node-version == '20.x'
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella